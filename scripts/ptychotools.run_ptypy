#!/usr/bin/env python

import argparse
from ptychotools.utils.ptypy_parameters import paramtree_from_json, parse_param_data_paths_with_paramtree
from ptychotools.verbose import logger
from ptypy.core import Ptycho
import ptypy.utils as u


parser = argparse.ArgumentParser(description='Runs a ptychography from the command line.')

parser.add_argument("json_file",
                    help="The path to the json configuration file.",
                    type=str)

parser.add_argument('--output-folder', '-O',
                    dest="output_folder",
                    help="The path we want the outputs to exist in (will get created).",
                    type=str)

parser.add_argument('--ptypy-level', '-L',
                    dest="ptypy_level",
                    help="The level we want to run to ptypy to.",
                    default=5,
                    type=str)

parser.add_argument('--identifier', '-I',
                    dest="identifier",
                    help="This is the same as p.run.",
                    default=None,
                    type=str)

parser.add_argument('--plot', '-P',
                    dest="plotting",
                    help="A switch for the plotting. 1: on, 0:off",
                    default=1,
                    type=int)

args = parser.parse_args()

def get_file_name(args):
    from datetime import datetime
    now = datetime.now()
    if args.identifier is not None:
        output_path = "{}scan_{}_{}".format(args.output_folder, args.identifier, now.strftime("%Y%m%d%H%M%S"))
    else:
        output_path = "{}scan_{}".format(args.output_folder, now.strftime("%Y%m%d%H%M%S"))
    logger.debug("Output is going in: {}".format(output_path))
    return output_path

parameters = paramtree_from_json(args.json_file)


parameters.run = args.identifier
if args.plotting:
    logger.debug("Turning the plotting on.")
    parameters.io.autoplot = u.Param(active=True)
else:
    logger.debug("Turning the plotting off.")
    parameters.io.autoplot = u.Param(active=False)
# make sure we aren't randomly writing somewhere if this isn't set.
if args.output_folder is not None:
    parameters.io.home = get_file_name(args)
    parameters.io.rfile = "%s.ptyr" % get_file_name(args)
    parameters.io.autosave = u.Param(active=True, interval=100)
    logger.debug("Autosave is on, with io going in {}, and the final reconstruction into {}".format(parameters.io.home,
                                                                                              parameters.io.rfile))
else:
    parameters.io.rfile = None
    parameters.io.autosave = u.Param(active=False)
    logger.debug("Autosave is off. No output will be saved.")


# have to get the identifier into scan.data somehow.
parse_param_data_paths_with_paramtree(parameters)


P = Ptycho(parameters, level=args.ptypy_level)

